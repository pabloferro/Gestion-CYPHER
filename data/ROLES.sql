drop PROCEDURE CYPHER.GETFUNCIONALIDADESNUEVOROL
drop PROCEDURE CYPHER.GETFUNCIONALIDADESROL
drop PROCEDURE CYPHER.GETNOMBRESROLES
drop PROCEDURE CYPHER.UPDATEROL
drop PROCEDURE CYPHER.UPDATEROLFUNCIONALIDAD
drop PROCEDURE CYPHER.HABILITARROL

GO

CREATE PROCEDURE CYPHER.GETFUNCIONALIDADESNUEVOROL
AS
BEGIN
	select 0 HAB, FUNC_CODIGO CODIGO, FUNC_NOMBRE NOMBRE
	from CYPHER.FUNCIONALIDAD
	order by FUNC_CODIGO ASC
END

GO

CREATE PROCEDURE CYPHER.GETFUNCIONALIDADESROL(@ROL int)
AS
BEGIN
	select 
		(CASE when exists(select * from CYPHER.FUNCIONALIDAD_POR_ROL
						  where FUNCROL_ROL = @ROL AND FUNCROL_FUNC = FUNC_CODIGO) 
		 then 1 else 0 end) HAB,
		 FUNC_CODIGO CODIGO,
		 FUNC_NOMBRE NOMBRE
	from CYPHER.FUNCIONALIDAD
	order by FUNC_CODIGO ASC
END

GO

CREATE PROCEDURE CYPHER.GETNOMBRESROLES
AS
BEGIN
	select ROL_CODIGO CODE, ROL_INHABILITADO HAB, ROL_NOMBRE NOMBRE from ROL order by ROL_CODIGO
END

GO

CREATE PROCEDURE CYPHER.UPDATEROL(@ROL int, @NOMBRE nvarchar(255))
AS
BEGIN
	UPDATE CYPHER.ROL SET ROL_NOMBRE = @NOMBRE where ROL_CODIGO = @ROL
END

GO

CREATE PROCEDURE CYPHER.UPDATEROLFUNCIONALIDAD(@ROL int, @FUNC int, @ACTIVADA bit)
AS
BEGIN
	IF EXISTS (SELECT * FROM CYPHER.FUNCIONALIDAD_POR_ROL WHERE FUNCROL_ROL = @ROL AND FUNCROL_FUNC = @FUNC)
	 begin
		IF (@ACTIVADA=0) 
			DELETE FROM CYPHER.FUNCIONALIDAD_POR_ROL WHERE FUNCROL_ROL = @ROL AND FUNCROL_FUNC = @FUNC
	 end
	ELSE
	 begin
		IF (@ACTIVADA=1) 
			INSERT INTO CYPHER.FUNCIONALIDAD_POR_ROL (FUNCROL_ROL, FUNCROL_FUNC) VALUES (@ROL, @FUNC)
	 end
END

GO

CREATE PROCEDURE CYPHER.HABILITARROL(@ROL int, @HABILITADO bit)
AS
BEGIN
	if @HABILITADO = 0
		if (SELECT ROL_INHABILITADO FROM CYPHER.ROL WHERE ROL_CODIGO = @ROL) = 1
				DELETE FROM CYPHER.ROLES_POR_USUARIO WHERE ROLUS_ROL = @ROL		
	--
	UPDATE CYPHER.ROL SET ROL_INHABILITADO = @HABILITADO where ROL_CODIGO = @ROL 						
END